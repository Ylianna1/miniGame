from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram import types
from create_bot import dp
from asyncio import sleep
import random

'***********–ö–Ω–æ–ø–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π***************'

cuefa = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
b1 = KeyboardButton('‚úä')
b2 = KeyboardButton('üñê')
b3 = KeyboardButton('‚úåÔ∏è')
b4 = KeyboardButton('üëå')
cuefa.add(b1, b2, b3, b4) #cuefa(—Ü—É–µ—Ñ–∞) —ñ–Ω—à–∞ –Ω–∞–∑–≤–∞ –≥—Ä–∏

buttn_continuation = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
backmenu = KeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è')
continuation = KeyboardButton('–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏')
buttn_continuation.add(continuation, backmenu)

@dp.message_handler(text=['–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏','–ø–æ–≤—Ç–æ—Ä–∏—Ç–∏'])
async def contin(message : types.Message):
    await message.answer('–ö–∞–º—ñ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ñ, –ø–∞–ø—ñ—Ä!!!', reply_markup=cuefa)

'***********Game***************'
points=0
point=0
i=0
b=['‚úä','üñê','‚úåÔ∏è','üëå']

@dp.message_handler(text=b)
async def StoneGame(message : types.Message):

    global points
    global point
    global i
    
    d = open('text_infoGame/points.txt', 'r', encoding='UTF-8')
    chips = int(d.read())
    d.close()

    if i < 3:
        i+=1
        ans=(random.choice(b))
        await message.answer(ans)
        if  ans == message.text:
            await message.answer('–ù–∏—á–∏—è')
        elif message.text =="–ö–∞–º—ñ–Ω—å" or message.text == "–∫–∞–º—ñ–Ω—å" or message.text == "‚úä":
            if ans == "‚úåÔ∏è":
                points+=1
                await message.answer("–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –±–∞–ª")
            else:
                point+=1
                await message.answer("–ë–∞–ª –º—ñ–π")
        elif message.text == "–ü–∞–ø—ñ—Ä" or message.text == "–ø–∞–ø—ñ—Ä" or message.text == "üñê":
            if ans == "‚úä" or ans == 'üëå':
                points+=1
                await message.answer("–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –±–∞–ª")
            else:
                point+=1
                await message.answer("–ë–∞–ª –º—ñ–π")
        elif message.text == "–ö–æ–ª–æ–¥—è–∑—å" or message.text == "–∫–æ–ª–æ–¥—è–∑—å" or message.text == "üëå":
            if ans == "‚úä" or ans == '‚úåÔ∏è':
                points+=1
                await message.answer("–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –±–∞–ª")
            else:
                point+=1
                await message.answer("–ë–∞–ª –º—ñ–π")
        elif message.text == "–ù–æ–∂–µ—Ü—ñ" or message.text == "–Ω–æ–∂–µ—Ü—ñ" or message.text == "‚úåÔ∏è":
            if ans == "üñê":
                points+=1
                await message.answer("–í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –±–∞–ª")
            else:
                point+=1
                await message.answer("–ë–∞–ª –º—ñ–π")
    else:
        i=0
        if points >= 2:
            await message.answer('–í—ñ—Ç–∞—é, –í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏!!!')
            await message.answer('üéâ')
            chips+=2
        elif points == point:
            await message.answer('–£ –Ω–∞—Å –Ω—ñ—á–∏—è')
            await message.answer('üëè')
            chips+=1
        else:
            await message.answer('–ë—É-–≥–∞-–≥–∞-–≥–∞.–¶–µ –º–æ—è –ø–µ—Ä–µ–º–æ–≥–∞!!!')
            await message.answer('üòà')
            chips=chips
        await sleep(1)
        await message.answer(f'–í–∏ –Ω–∞–±—Ä–∞–ª–∏ {points} –±–∞–ª–∏')
        await sleep(1)
        await message.answer(f'–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∞—à–∏—Ö —Ñ—ñ—à–æ–∫: {chips}üé´')
        await message.answer('–ë–∞–∂–∞—î—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏?', reply_markup=buttn_continuation)
        points=0
        point=0
        
        d = open('text_infoGame/points.txt', "w")
        d.write(str(chips))
        d.close()