from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types
from create_bot import dp, bot
from asyncio import sleep

'***********–ö–Ω–æ–ø–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π***************'
cubeButton = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
Button1 = KeyboardButton(text='üé≤üé≤')
cubeButton.add(Button1)

kb_cube = InlineKeyboardMarkup(row_width=1)
Button1 = InlineKeyboardButton(text='–¢–∞–∫', callback_data='Y')
Button2 = InlineKeyboardButton(text='–ùi', callback_data='No')
kb_cube.add(Button1, Button2)

@dp.callback_query_handler(text="Y")
async def Yes(Yes: types.CallbackQuery):
    await Yes.message.answer('–ö–∏–¥–∞–π—Ç–µ –∫—É–±–∏–∫:', reply_markup=cubeButton)

'***********Game***************'

@dp.message_handler(text=['üé≤üé≤','–ö—É–±','–∫—É–±'])
async def coinGame(message : types.Message):

    d = open('text_infoGame/points.txt', 'r', encoding='UTF-8')
    chips = int(d.read())
    d.close()

    user_data = await bot.send_dice(message.from_user.id)
    user_data = user_data['dice']['value']
    await sleep(5)

    bot_data = await bot.send_dice(message.from_user.id)
    bot_data = bot_data['dice']['value']
    await sleep(5)

    if bot_data > user_data:
        chips=chips+0
        await message.answer("–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏!")
        await message.answer(f'–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∞—à–∏—Ö —Ñ—ñ—à–æ–∫: {chips}üé´')
        await sleep(1)
        await message.answer('–ë–∞–∂–∞—î—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏?', reply_markup=kb_cube)
    elif bot_data < user_data:
        chips+=2
        await message.answer("–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏!")
        await message.answer(f'–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∞—à–∏—Ö —Ñ—ñ—à–æ–∫: {chips}üé´')
        await sleep(1)
        await message.answer('–ë–∞–∂–∞—î—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏?', reply_markup=kb_cube)
    else:
        chips+=1
        await message.answer("–ù–∏—á–∏—è!")
        await message.answer(f'–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∞—à–∏—Ö —Ñ—ñ—à–æ–∫: {chips}üé´')
        await sleep(1)
        await message.answer('–ë–∞–∂–∞—î—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏?', reply_markup=kb_cube)
    
        
    d = open('text_infoGame/points.txt', "w")
    d.write(str(chips))
    d.close()